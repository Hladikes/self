{"version":3,"sources":["../../../utils/websocket.ts","../../../utils/utils.ts"],"sourcesContent":["import type { SelfApp } from '@selfxyz/common';\nimport type { Socket } from 'socket.io-client';\nimport { io } from 'socket.io-client';\n\nimport { QRcodeSteps } from './utils.js';\n\nexport interface WebAppInfo {\n  appName: string;\n  userId: string;\n  logoBase64: string;\n}\n\n// Log once when this module loads\nconsole.log('[WebSocket] Initializing websocket module.');\n\nconst validateWebSocketUrl = (websocketUrl: string) => {\n  if (websocketUrl.includes('localhost') || websocketUrl.includes('127.0.0.1')) {\n    throw new Error('localhost websocket URLs are not allowed');\n  }\n};\n\nconst newSocket = (websocketUrl: string, sessionId: string) => {\n  const fullUrl = `${websocketUrl}/websocket`;\n  console.log(`[WebSocket] Creating new socket. URL: ${fullUrl}, sessionId: ${sessionId}`);\n  return io(fullUrl, {\n    path: '/',\n    query: { sessionId, clientType: 'web' },\n    transports: ['websocket'],\n  });\n};\n\nconst handleWebSocketMessage =\n  (\n    socket: Socket,\n    sessionId: string,\n    selfApp: SelfApp,\n    type: 'websocket' | 'deeplink',\n    setProofStep: (step: number) => void,\n    onSuccess: () => void,\n    onError: (data: { error_code?: string; reason?: string }) => void\n  ) =>\n  async (data: { status: string; error_code?: string; reason?: string }) => {\n    console.log('[WebSocket] Received mobile status:', data.status, 'for session:', sessionId);\n    switch (data.status) {\n      case 'mobile_connected':\n        console.log(\n          '[WebSocket] Mobile device connected. Emitting self_app event with payload:',\n          selfApp\n        );\n        setProofStep(QRcodeSteps.MOBILE_CONNECTED);\n        if (type === 'websocket') {\n          socket.emit('self_app', { ...selfApp, sessionId });\n        }\n        break;\n      case 'mobile_disconnected':\n        console.log('[WebSocket] Mobile device disconnected.');\n        setProofStep(QRcodeSteps.WAITING_FOR_MOBILE);\n        break;\n      case 'proof_generation_started':\n        console.log('[WebSocket] Proof generation started.');\n        setProofStep(QRcodeSteps.PROOF_GENERATION_STARTED);\n        break;\n      case 'proof_generated':\n        console.log('[WebSocket] Proof generated.');\n        setProofStep(QRcodeSteps.PROOF_GENERATED);\n        break;\n      case 'proof_generation_failed':\n        console.log('[WebSocket] Proof generation failed.');\n        setProofStep(QRcodeSteps.PROOF_GENERATION_FAILED);\n        onError(data);\n        break;\n      case 'proof_verified':\n        console.log('[WebSocket] Proof verified.');\n        console.log('ws data', data);\n        setProofStep(QRcodeSteps.PROOF_VERIFIED);\n        onSuccess();\n        break;\n      default:\n        console.log('[WebSocket] Unhandled mobile status:', data.status);\n        break;\n    }\n  };\n\nexport function initWebSocket(\n  websocketUrl: string,\n  selfApp: SelfApp,\n  type: 'websocket' | 'deeplink',\n  setProofStep: (step: number) => void,\n  onSuccess: () => void,\n  onError: (data: { error_code?: string; reason?: string }) => void\n) {\n  validateWebSocketUrl(websocketUrl);\n  const sessionId = selfApp.sessionId;\n  console.log(`[WebSocket] Initializing WebSocket connection for sessionId: ${sessionId}`);\n  const socket = newSocket(websocketUrl, sessionId);\n\n  socket.on('connect', () => {\n    console.log(\n      `[WebSocket] Connected with id: ${socket.id}, transport: ${socket.io.engine.transport.name}`\n    );\n  });\n\n  socket.on('connect_error', (error) => {\n    console.error('[WebSocket] Connection error:', error);\n  });\n\n  socket.on('mobile_status', (data) => {\n    console.log('[WebSocket] Raw mobile_status event received:', data);\n    handleWebSocketMessage(\n      socket,\n      sessionId,\n      selfApp,\n      type,\n      setProofStep,\n      onSuccess,\n      onError\n    )(data);\n  });\n\n  socket.on('disconnect', (reason: string) => {\n    console.log(\n      `[WebSocket] Disconnected. Reason: ${reason}, Last transport: ${socket.io.engine.transport?.name}`\n    );\n  });\n\n  return () => {\n    console.log(`[WebSocket] Cleaning up connection for sessionId: ${sessionId}`);\n    if (socket) {\n      socket.disconnect();\n    }\n  };\n}\n","export const QRcodeSteps = {\n  DISCONNECTED: 0,\n  WAITING_FOR_MOBILE: 1,\n  MOBILE_CONNECTED: 2,\n  PROOF_GENERATION_STARTED: 3,\n  PROOF_GENERATION_FAILED: 4,\n  PROOF_GENERATED: 5,\n  PROOF_VERIFIED: 6,\n};\n"],"mappings":"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","names":[]}