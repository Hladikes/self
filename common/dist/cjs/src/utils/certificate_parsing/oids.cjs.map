{"version":3,"sources":["../../../../../src/utils/certificate_parsing/oids.ts"],"sourcesContent":["export function extractHashFunction(friendlyName: string): string {\n  if (friendlyName.toLowerCase().includes('sha1')) {\n    return 'sha1';\n  }\n  if (friendlyName.toLowerCase().includes('sha256')) {\n    return 'sha256';\n  }\n  if (friendlyName.toLowerCase().includes('sha384')) {\n    return 'sha384';\n  }\n  if (friendlyName.toLowerCase().includes('sha512')) {\n    return 'sha512';\n  }\n  throw new Error('hash function not found in: ' + friendlyName);\n\n  return 'unknown';\n}\n\nexport function getFriendlyName(oid: string): string {\n  return getFriendlyNameSecpCurves(oidMap[oid]) || 'Unknown Algorithm';\n}\n\nexport function getSecpFromNist(nist: string): string {\n  switch (nist) {\n    case 'nistP224':\n      return 'secp224r1';\n    case 'nistP256':\n      return 'secp256r1';\n    case 'nistP384':\n      return 'secp384r1';\n    case 'nistP521':\n      return 'secp521r1';\n  }\n  return nist;\n}\n\nfunction getFriendlyNameSecpCurves(friendlyName: string): string {\n  return mapSecpCurves[friendlyName] || friendlyName;\n}\n\nexport const mapSecpCurves: { [key: string]: string } = {\n  ECDSA_224: 'secp224r1',\n  ECDSA_P256: 'secp256r1',\n  ECDSA_P384: 'secp384r1',\n  ECDSA_P521: 'secp521r1',\n};\n\nexport const oidMap: { [key: string]: string } = {\n  '1.2.840.113549.3.7': '3des',\n  '2.16.840.1.101.3.4.1.2': 'aes128',\n  '2.16.840.1.101.3.4.1.5': 'aes128wrap',\n  '2.16.840.1.101.3.4.1.22': 'aes192',\n  '2.16.840.1.101.3.4.1.25': 'aes192wrap',\n  '2.16.840.1.101.3.4.1.42': 'aes256',\n  '2.16.840.1.101.3.4.1.45': 'aes256wrap',\n  '1.3.36.3.3.2.8.1.1.1': 'brainpoolP160r1',\n  '1.3.36.3.3.2.8.1.1.2': 'brainpoolP160t1',\n  '1.3.36.3.3.2.8.1.1.3': 'brainpoolP192r1',\n  '1.3.36.3.3.2.8.1.1.4': 'brainpoolP192t1',\n  '1.3.36.3.3.2.8.1.1.5': 'brainpoolP224r1',\n  '1.3.36.3.3.2.8.1.1.6': 'brainpoolP224t1',\n  '1.3.36.3.3.2.8.1.1.7': 'brainpoolP256r1',\n  '1.3.36.3.3.2.8.1.1.8': 'brainpoolP256t1',\n  '1.3.36.3.3.2.8.1.1.9': 'brainpoolP320r1',\n  '1.3.36.3.3.2.8.1.1.10': 'brainpoolP320t1',\n  '1.3.36.3.3.2.8.1.1.11': 'brainpoolP384r1',\n  '1.3.36.3.3.2.8.1.1.12': 'brainpoolP384t1',\n  '1.3.36.3.3.2.8.1.1.13': 'brainpoolP512r1',\n  '1.3.36.3.3.2.8.1.1.14': 'brainpoolP512t1',\n  '2.5.4.6': 'C',\n  '1.2.840.113549.1.9.16.3.6': 'CMS3DESwrap',\n  '1.2.840.113549.1.9.16.3.7': 'CMSRC2wrap',\n  '2.5.4.3': 'CN',\n  '1.3.6.1.5.5.7.2.1': 'CPS',\n  '0.9.2342.19200300.100.1.25': 'DC',\n  '1.3.14.3.2.7': 'des',\n  '2.5.4.13': 'Description',\n  '1.2.840.10046.2.1': 'DH',\n  '2.5.4.46': 'dnQualifier',\n  '1.2.840.10040.4.1': 'DSA',\n  '1.3.14.3.2.27': 'dsaSHA1',\n  '1.2.840.113549.1.9.1': 'E',\n  '1.2.156.11235.1.1.2.1': 'ec192wapi',\n  '1.2.840.10045.2.1': 'ECC',\n  '1.3.133.16.840.63.0.2': 'ECDH_STD_SHA1_KDF',\n  '1.3.132.1.11.1': 'ECDH_STD_SHA256_KDF',\n  '1.3.132.1.11.2': 'ECDH_STD_SHA384_KDF',\n  '1.2.840.10045.3.1.7': 'ECDSA_P256',\n  '1.3.132.0.34': 'ECDSA_P384',\n  '1.3.132.0.35': 'ECDSA_P521',\n  '1.2.840.113549.1.9.16.3.5': 'ESDH',\n  '2.5.4.42': 'G',\n  '2.5.4.43': 'I',\n  '2.5.4.7': 'L',\n  '1.2.840.113549.2.2': 'md2',\n  '1.2.840.113549.1.1.2': 'md2RSA',\n  '1.2.840.113549.2.4': 'md4',\n  '1.2.840.113549.1.1.3': 'md4RSA',\n  '1.2.840.113549.2.5': 'md5',\n  '1.2.840.113549.1.1.4': 'md5RSA',\n  '1.2.840.113549.1.1.8': 'mgf1',\n  '2.16.840.1.101.2.1.1.20': 'mosaicKMandUpdSig',\n  '2.16.840.1.101.2.1.1.19': 'mosaicUpdatedSig',\n  '1.2.840.10045.3.1.1': 'nistP192',\n  '1.3.132.0.33': 'nistP224',\n  '1.3.6.1.5.5.7.6.2': 'NO_SIGN',\n  '2.5.4.10': 'O',\n  '2.5.4.11': 'OU',\n  '2.5.4.20': 'Phone',\n  '2.5.4.18': 'POBox',\n  '2.5.4.17': 'PostalCode',\n  '1.2.840.113549.3.2': 'rc2',\n  '1.2.840.113549.3.4': 'rc4',\n  '1.2.840.113549.1.1.1': 'RSA',\n  '1.2.840.113549.1.1.7': 'RSAES_OAEP',\n  '1.2.840.113549.1.1.10': 'RSASSA_PSS',\n  '2.5.4.8': 'S',\n  '1.3.132.0.9': 'secP160k1',\n  '1.3.132.0.8': 'secP160r1',\n  '1.3.132.0.30': 'secP160r2',\n  '1.3.132.0.31': 'secP192k1',\n  '1.3.132.0.32': 'secP224k1',\n  '1.3.132.0.10': 'secP256k1',\n  '2.5.4.5': 'SERIALNUMBER',\n  '1.3.14.3.2.26': 'sha1',\n  '1.2.840.10040.4.3': 'sha1DSA',\n  '1.2.840.10045.4.1': 'sha1ECDSA',\n  '1.2.840.113549.1.1.5': 'sha1RSA',\n  '1.2.840.10045.4.3.1': 'sha224ECDSA',\n  '1.2.840.113549.1.1.14': 'sha224RSA',\n  '2.16.840.1.101.3.4.2.1': 'sha256',\n  '1.2.840.10045.4.3.2': 'sha256ECDSA',\n  '1.2.840.113549.1.1.11': 'sha256RSA',\n  '2.16.840.1.101.3.4.2.2': 'sha384',\n  '1.2.840.10045.4.3.3': 'sha384ECDSA',\n  '1.2.840.113549.1.1.12': 'sha384RSA',\n  '2.16.840.1.101.3.4.2.3': 'sha512',\n  '1.2.840.10045.4.3.4': 'sha512ECDSA',\n  '1.2.840.113549.1.1.13': 'sha512RSA',\n  '2.5.4.4': 'SN',\n  '1.2.840.10045.4.3': 'specifiedECDSA',\n  '2.5.4.9': 'STREET',\n  '2.5.4.12': 'T',\n  '2.23.133.2.1': 'TPMManufacturer',\n  '2.23.133.2.2': 'TPMModel',\n  '2.23.133.2.3': 'TPMVersion',\n  '2.23.43.1.4.9': 'wtls9',\n  '2.5.4.24': 'X21Address',\n  '1.2.840.10045.3.1.2': 'x962P192v2',\n  '1.2.840.10045.3.1.3': 'x962P192v3',\n  '1.2.840.10045.3.1.4': 'x962P239v1',\n  '1.2.840.10045.3.1.5': 'x962P239v2',\n  '1.2.840.10045.3.1.6': 'x962P239v3',\n};\n"],"mappings":"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","names":[]}