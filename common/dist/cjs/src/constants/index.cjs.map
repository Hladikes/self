{"version":3,"sources":["../../../../src/constants/index.ts","../../../../src/constants/constants.ts","../../../../src/constants/countries.ts"],"sourcesContent":["// Re-export commonly used constants from constants.ts for optimal tree shaking\nexport type { Country3LetterCode } from './constants.js';\nexport {\n  API_URL,\n  API_URL_STAGING,\n  CIRCUIT_CONSTANTS,\n  CSCA_TREE_URL,\n  CSCA_TREE_URL_ID_CARD,\n  CSCA_TREE_URL_STAGING,\n  CSCA_TREE_URL_STAGING_ID_CARD,\n  DEFAULT_MAJORITY,\n  DSC_TREE_URL,\n  DSC_TREE_URL_ID_CARD,\n  DSC_TREE_URL_STAGING,\n  DSC_TREE_URL_STAGING_ID_CARD,\n  DscVerifierId,\n  IDENTITY_TREE_URL,\n  IDENTITY_TREE_URL_ID_CARD,\n  IDENTITY_TREE_URL_STAGING,\n  IDENTITY_TREE_URL_STAGING_ID_CARD,\n  ID_CARD_ATTESTATION_ID,\n  PASSPORT_ATTESTATION_ID,\n  PCR0_MANAGER_ADDRESS,\n  RPC_URL,\n  REDIRECT_URL,\n  RegisterVerifierId,\n  SignatureAlgorithmIndex,\n  TREE_URL,\n  TREE_URL_STAGING,\n  WS_DB_RELAYER,\n  WS_DB_RELAYER_STAGING,\n  attributeToPosition,\n  attributeToPosition_ID,\n  countryCodes,\n} from './constants.js';\n\n// Re-export from other constant files\nexport { commonNames, countries } from './countries.js';\n","export type Country3LetterCode = keyof typeof countryCodes;\nexport type document_type = 'passport' | 'id_card';\nexport type hashAlgosTypes = 'sha512' | 'sha384' | 'sha256' | 'sha224' | 'sha1';\nexport const API_URL = 'https://api.self.xyz';\nexport const API_URL_STAGING = 'https://api.staging.self.xyz';\n\nexport const CHAIN_NAME = 'celo';\n\n// possible values because of sha1 constaints: 192,320,384, 448, 576, 640\nexport const CIRCUIT_CONSTANTS = {\n  REGISTER_NULLIFIER_INDEX: 0,\n  REGISTER_COMMITMENT_INDEX: 1,\n  REGISTER_MERKLE_ROOT_INDEX: 2,\n\n  DSC_TREE_LEAF_INDEX: 0,\n  DSC_CSCA_ROOT_INDEX: 1,\n\n  VC_AND_DISCLOSE_REVEALED_DATA_PACKED_INDEX: 0,\n  VC_AND_DISCLOSE_FORBIDDEN_COUNTRIES_LIST_PACKED_INDEX: 3,\n  VC_AND_DISCLOSE_NULLIFIER_INDEX: 7,\n  VC_AND_DISCLOSE_ATTESTATION_ID_INDEX: 8,\n  VC_AND_DISCLOSE_MERKLE_ROOT_INDEX: 9,\n  VC_AND_DISCLOSE_CURRENT_DATE_INDEX: 10,\n  VC_AND_DISCLOSE_PASSPORT_NO_SMT_ROOT_INDEX: 16,\n  VC_AND_DISCLOSE_NAME_DOB_SMT_ROOT_INDEX: 17,\n  VC_AND_DISCLOSE_NAME_YOB_SMT_ROOT_INDEX: 18,\n  VC_AND_DISCLOSE_SCOPE_INDEX: 19,\n  VC_AND_DISCLOSE_USER_IDENTIFIER_INDEX: 20,\n};\n\nexport const CIRCUIT_TYPES = ['dsc', 'register', 'vc_and_disclose'];\n\nexport const COMMITMENT_TREE_DEPTH = 33;\n\nexport const CSCA_TREE_DEPTH = 12;\n\nexport const CSCA_TREE_URL = 'https://tree.self.xyz/csca';\n\nexport const CSCA_TREE_URL_ID_CARD = 'https://tree.self.xyz/csca-id';\n\nexport const CSCA_TREE_URL_STAGING = 'https://tree.staging.self.xyz/csca';\n\nexport const CSCA_TREE_URL_STAGING_ID_CARD = 'https://tree.staging.self.xyz/csca-id';\n\nexport const DEFAULT_MAJORITY = '18';\n\nexport const DEFAULT_RPC_URL = 'https://mainnet.optimism.io';\n\nexport const DEFAULT_USER_ID_TYPE = 'uuid';\n\nexport const DEVELOPMENT_MODE = true;\n\nexport const DSC_TREE_DEPTH = 21;\n\nexport const DSC_TREE_URL = 'https://tree.self.xyz/dsc';\n\nexport const DSC_TREE_URL_ID_CARD = 'https://tree.self.xyz/dsc-id';\n\nexport const DSC_TREE_URL_STAGING = 'https://tree.staging.self.xyz/dsc';\n\nexport const DSC_TREE_URL_STAGING_ID_CARD = 'https://tree.staging.self.xyz/dsc-id';\n\nexport enum DscVerifierId {\n  dsc_sha1_ecdsa_brainpoolP256r1 = 0,\n  dsc_sha1_rsa_65537_4096 = 1,\n  dsc_sha256_ecdsa_brainpoolP256r1 = 2,\n  dsc_sha256_ecdsa_brainpoolP384r1 = 3,\n  dsc_sha256_ecdsa_secp256r1 = 4,\n  dsc_sha256_ecdsa_secp384r1 = 5,\n  dsc_sha256_ecdsa_secp521r1 = 6,\n  dsc_sha256_rsa_65537_4096 = 7,\n  dsc_sha256_rsapss_3_32_3072 = 8,\n  dsc_sha256_rsapss_65537_32_3072 = 9,\n  dsc_sha256_rsapss_65537_32_4096 = 10,\n  dsc_sha384_ecdsa_brainpoolP384r1 = 11,\n  dsc_sha384_ecdsa_brainpoolP512r1 = 12,\n  dsc_sha384_ecdsa_secp384r1 = 13,\n  dsc_sha512_ecdsa_brainpoolP512r1 = 14,\n  dsc_sha512_ecdsa_secp521r1 = 15,\n  dsc_sha512_rsa_65537_4096 = 16,\n  dsc_sha512_rsapss_65537_64_4096 = 17,\n  dsc_sha256_rsapss_3_32_4096 = 18,\n  dsc_sha1_ecdsa_secp256r1 = 19,\n}\n\nexport const ECDSA_K_LENGTH_FACTOR = 2;\n\nexport const IDENTITY_TREE_URL = 'https://tree.self.xyz/identity';\n\n//\"8518753152044246090169372947057357973469996808638122125210848696986717482788\"\nexport const IDENTITY_TREE_URL_ID_CARD = 'https://tree.self.xyz/identity-id';\n\nexport const IDENTITY_TREE_URL_STAGING = 'https://tree.staging.self.xyz/identity';\n\nexport const IDENTITY_TREE_URL_STAGING_ID_CARD = 'https://tree.staging.self.xyz/identity-id';\n\nexport const ID_CARD_ATTESTATION_ID = '2';\n\nexport const MAX_BYTES_IN_FIELD = 31;\n\nexport const MAX_CERT_BYTES: Partial<Record<keyof typeof SignatureAlgorithmIndex, number>> = {\n  rsa_sha256_65537_4096: 512,\n  rsa_sha1_65537_4096: 640,\n  rsapss_sha256_65537_2048: 640,\n  rsapss_sha256_65537_3072: 640,\n  rsapss_sha256_65537_4096: 768,\n  rsapss_sha256_3_3072: 768,\n  rsapss_sha256_3_4096: 768,\n  rsapss_sha384_65537_3072: 768,\n};\n\n/**\n * Maximum number of countries in the forbidden countries list.\n *\n * IMPORTANT: This value must match in both backend and frontend SDK.\n * Any mismatch will result in an INVALID_FORBIDDEN_COUNTRIES error.\n */\nexport const MAX_DATAHASHES_LEN = 320;\n\nexport const MAX_FORBIDDEN_COUNTRIES_LIST_LENGTH = 40;\n\nexport const MAX_PADDED_ECONTENT_LEN: Partial<Record<(typeof hashAlgos)[number], number>> = {\n  sha1: 384,\n  sha224: 512,\n  sha256: 512,\n  sha384: 768,\n  sha512: 896,\n};\n\nexport const MAX_PADDED_SIGNED_ATTR_LEN: Record<(typeof hashAlgos)[number], number> = {\n  sha1: 128,\n  sha224: 128,\n  sha256: 128,\n  sha384: 256,\n  sha512: 256,\n};\n\n// Note: Circuit lists are now managed through RegisterVerifierId and DscVerifierId enums below\n// instead of separate arrays for better type safety and maintainability\nexport const MAX_PUBKEY_DSC_BYTES = 525;\n\nexport const OFAC_TREE_LEVELS = 64;\n\n// we make it global here because passing it to generateCircuitInputsRegister caused trouble\nexport const PASSPORT_ATTESTATION_ID = '1';\n\nexport const PCR0_MANAGER_ADDRESS = '0xE36d4EE5Fd3916e703A46C21Bb3837dB7680C8B8';\n\nexport const REDIRECT_URL = 'https://redirect.self.xyz';\n\nexport const REGISTER_CONTRACT_ADDRESS = '0x3F346FFdC5d583e4126AF01A02Ac5b9CdB3f1909';\n\nexport const RPC_URL = 'https://forno.celo.org';\n\nexport enum RegisterVerifierId {\n  register_sha256_sha256_sha256_rsa_65537_4096 = 0,\n  register_sha256_sha256_sha256_ecdsa_brainpoolP384r1 = 1,\n  register_sha256_sha256_sha256_ecdsa_secp256r1 = 2,\n  register_sha256_sha256_sha256_ecdsa_secp384r1 = 3,\n  register_sha256_sha256_sha256_rsa_3_4096 = 4,\n  register_sha256_sha256_sha256_rsapss_3_32_2048 = 5,\n  register_sha256_sha256_sha256_rsapss_65537_32_2048 = 6,\n  register_sha256_sha256_sha256_rsapss_65537_32_3072 = 7,\n  register_sha384_sha384_sha384_ecdsa_brainpoolP384r1 = 8,\n  register_sha384_sha384_sha384_ecdsa_brainpoolP512r1 = 9,\n  register_sha384_sha384_sha384_ecdsa_secp384r1 = 10,\n  register_sha512_sha512_sha512_ecdsa_brainpoolP512r1 = 11,\n  register_sha512_sha512_sha512_rsa_65537_4096 = 12,\n  register_sha512_sha512_sha512_rsapss_65537_64_2048 = 13,\n  register_sha1_sha1_sha1_rsa_65537_4096 = 14,\n  register_sha1_sha256_sha256_rsa_65537_4096 = 15,\n  register_sha224_sha224_sha224_ecdsa_brainpoolP224r1 = 16,\n  register_sha256_sha224_sha224_ecdsa_secp224r1 = 17,\n  register_sha256_sha256_sha256_ecdsa_brainpoolP256r1 = 18,\n  register_sha1_sha1_sha1_ecdsa_brainpoolP224r1 = 19,\n  register_sha384_sha384_sha384_rsapss_65537_48_2048 = 20,\n  register_sha1_sha1_sha1_ecdsa_secp256r1 = 21,\n  register_sha256_sha256_sha256_rsapss_65537_64_2048 = 22,\n  register_sha512_sha512_sha256_rsa_65537_4096 = 23,\n  register_sha512_sha512_sha512_ecdsa_secp521r1 = 24,\n  register_id_sha256_sha256_sha256_rsa_65537_4096 = 25,\n  register_sha256_sha256_sha224_ecdsa_secp224r1 = 26,\n  register_id_sha1_sha1_sha1_ecdsa_brainpoolP224r1 = 27,\n  register_id_sha1_sha1_sha1_ecdsa_secp256r1 = 28,\n  register_id_sha1_sha1_sha1_rsa_65537_4096 = 29,\n  register_id_sha1_sha256_sha256_rsa_65537_4096 = 30,\n  register_id_sha224_sha224_sha224_ecdsa_brainpoolP224r1 = 31,\n  register_id_sha256_sha224_sha224_ecdsa_secp224r1 = 32,\n  register_id_sha256_sha256_sha224_ecdsa_secp224r1 = 33,\n  register_id_sha256_sha256_sha256_ecdsa_brainpoolP256r1 = 34,\n  register_id_sha256_sha256_sha256_ecdsa_brainpoolP384r1 = 35,\n  register_id_sha256_sha256_sha256_ecdsa_secp256r1 = 36,\n  register_id_sha256_sha256_sha256_ecdsa_secp384r1 = 37,\n  register_id_sha256_sha256_sha256_rsa_3_4096 = 38,\n  register_id_sha256_sha256_sha256_rsapss_3_32_2048 = 39,\n  register_id_sha256_sha256_sha256_rsapss_65537_32_2048 = 40,\n  register_id_sha256_sha256_sha256_rsapss_65537_32_3072 = 41,\n  register_id_sha256_sha256_sha256_rsapss_65537_64_2048 = 42,\n  register_id_sha384_sha384_sha384_ecdsa_brainpoolP384r1 = 43,\n  register_id_sha384_sha384_sha384_ecdsa_brainpoolP512r1 = 44,\n  register_id_sha384_sha384_sha384_ecdsa_secp384r1 = 45,\n  register_id_sha384_sha384_sha384_rsapss_65537_48_2048 = 46,\n  register_id_sha512_sha512_sha256_rsa_65537_4096 = 47,\n  register_id_sha512_sha512_sha512_ecdsa_brainpoolP512r1 = 48,\n  register_id_sha512_sha512_sha512_ecdsa_secp521r1 = 49,\n  register_id_sha512_sha512_sha512_rsa_65537_4096 = 50,\n  register_id_sha512_sha512_sha512_rsapss_65537_64_2048 = 51,\n}\n\nexport const SBT_CONTRACT_ADDRESS = '0x601Fd54FD11C5E77DE84d877e55B829aff20f0A6';\n\nexport enum SignatureAlgorithmIndex {\n  rsa_sha256_65537_2048 = 1,\n  rsa_sha1_65537_2048 = 3,\n  rsapss_sha256_65537_2048 = 4,\n  ecdsa_sha1_secp256r1_256 = 7,\n  ecdsa_sha256_secp256r1_256 = 8,\n  ecdsa_sha384_secp384r1_384 = 9,\n  rsa_sha256_65537_4096 = 10,\n  rsa_sha1_65537_4096 = 11,\n  rsapss_sha256_65537_4096 = 12,\n  rsa_sha256_3_2048 = 13,\n  rsa_sha256_65537_3072 = 14,\n  rsa_sha512_65537_4096 = 15,\n  rsapss_sha256_3_3072 = 16,\n  rsapss_sha256_3_4096 = 17,\n  rsapss_sha384_65537_3072 = 18,\n  rsapss_sha256_65537_3072 = 19,\n  ecdsa_sha256_brainpoolP256r1_256 = 21,\n  ecdsa_sha384_brainpoolP384r1_384 = 22,\n  ecdsa_sha256_secp384r1_384 = 23,\n  ecdsa_sha384_brainpoolP256r1_256 = 24,\n  ecdsa_sha512_brainpoolP256r1_256 = 25,\n  ecdsa_sha512_brainpoolP384r1_384 = 26,\n  ecdsa_sha1_brainpoolP224r1_224 = 27,\n  ecdsa_sha256_brainpoolP224r1_224 = 28,\n  ecdsa_sha512_brainpoolP512r1_512 = 29,\n  ecdsa_sha224_brainpoolP224r1_224 = 30,\n  rsa_sha256_3_4096 = 32,\n  rsa_sha1_3_4096 = 33,\n  rsa_sha384_65537_4096 = 34,\n  rsapss_sha384_65537_4096 = 35,\n  ecdsa_sha1_brainpoolP256r1_256 = 36,\n  ecdsa_sha512_secp521r1_521 = 41,\n}\n\nexport const TREE_TRACKER_URL = 'https://tree.self.xyz';\n\nexport const TREE_URL = 'https://tree.self.xyz';\nexport const TREE_URL_STAGING = 'https://tree.staging.self.xyz';\n\nexport const WS_DB_RELAYER = 'wss://websocket.self.xyz';\n\nexport const WS_DB_RELAYER_STAGING = 'wss://websocket.staging.self.xyz';\n\nexport const WS_RPC_URL_VC_AND_DISCLOSE = 'ws://disclose.proving.self.xyz:8888/';\n\nexport const attributeToPosition = {\n  issuing_state: [2, 4],\n  name: [5, 43],\n  passport_number: [44, 52],\n  nationality: [54, 56],\n  date_of_birth: [57, 62],\n  gender: [64, 64],\n  expiry_date: [65, 70],\n  older_than: [88, 89],\n  ofac: [90, 90],\n};\nexport const attributeToPosition_ID = {\n  issuing_state: [2, 4],\n  name: [60, 89],\n  passport_number: [5, 13],\n  nationality: [45, 47],\n  date_of_birth: [30, 35],\n  gender: [37, 37],\n  expiry_date: [38, 43],\n  older_than: [90, 91],\n  ofac: [92, 92],\n};\n\nexport const circuitNameFromMode = {\n  prove: 'prove',\n  prove_onchain: 'prove',\n  prove_offchain: 'prove',\n  register: 'prove',\n  vc_and_disclose: 'vc_and_disclose',\n  dsc: 'dsc',\n};\nexport const circuitToSelectorMode = {\n  register: [0, 0],\n  prove_onchain: [1, 0],\n  prove_offchain: [1, 1],\n};\n\nexport const contribute_publicKey = `-----BEGIN RSA PUBLIC KEY-----\nMIICCgKCAgEAv/hm7FZZ2KBmaeDHmLoRwuWmCcNKT561RqbsW8ZuYSyPWJUldE9U\nCf0lW3K1H5lsSDkl0Cq84cooL9f6X59Mffb/N24ZKTdL0xdcPwjk4LbcrVm8qubL\n0a/4uCNoZZ1my4nxbpLxYtbr8CNmUGvBOVKf8IcjsY6VghIZrO63G6BN/G44su1Z\nWcHpboGt9SDQK4enCyKxnCD+PbDYlewSA0n3GRajFfZex1bj1EvrS2hTLv8oNH5e\n9H+3TUke0uO6Ttl0bZepoMmPlpAXhJByISqC6SLth4WFIH+G1I/xt9AEM7hOfLMl\nKQv/3wlLEgEueRryKAHB2tqkaDKVJyw+tOyWj2iWA+nVgQKAxO4hOw01ljyVbcx6\nKboXwnamlZPFIx4tjEaZ+ClXCFqvXhE9LDFK11QsYzJZl0aRVfTNqcurhEt7SK0f\nqzOBhID0Nxk4k9sW1uT6ocW1xp1SB2WotORssOKIAOLJM8IbPl6n/DkYNcfvyXI7\n4BlUrf6M2DgZMYATabIy94AvopHJOyiRfh4NpQPDntWnShiI1em2MmtXiWFCdVFV\n6/QfJTKVixJpVfDh386ALXc97EPWDMWIalUwYoV/eRSMnuV8nZ0+Ctp3Qrtk/JYd\n+FWhKbtlPeRjmGVr6mVlvDJ7KqtY5/RqqwfWeXhXezGhQqQ/OoQQCRkCAwEAAQ==\n-----END RSA PUBLIC KEY-----`;\n\n// not using a library for this as the entry countries use can be differnt than the ISO 3166-1 alpha-3 standard\nexport const countryCodes = {\n  AFG: 'Afghanistan',\n  ALA: 'Aland Islands',\n  ALB: 'Albania',\n  DZA: 'Algeria',\n  ASM: 'American Samoa',\n  AND: 'Andorra',\n  AGO: 'Angola',\n  AIA: 'Anguilla',\n  ATA: 'Antarctica',\n  ATG: 'Antigua and Barbuda',\n  ARG: 'Argentina',\n  ARM: 'Armenia',\n  ABW: 'Aruba',\n  AUS: 'Australia',\n  AUT: 'Austria',\n  AZE: 'Azerbaijan',\n  BHS: 'Bahamas',\n  BHR: 'Bahrain',\n  BGD: 'Bangladesh',\n  BRB: 'Barbados',\n  BLR: 'Belarus',\n  BEL: 'Belgium',\n  BLZ: 'Belize',\n  BEN: 'Benin',\n  BMU: 'Bermuda',\n  BTN: 'Bhutan',\n  BOL: 'Bolivia (Plurinational State of)',\n  BES: 'Bonaire, Sint Eustatius and Saba',\n  BIH: 'Bosnia and Herzegovina',\n  BWA: 'Botswana',\n  BVT: 'Bouvet Island',\n  BRA: 'Brazil',\n  IOT: 'British Indian Ocean Territory',\n  BRN: 'Brunei Darussalam',\n  BGR: 'Bulgaria',\n  BFA: 'Burkina Faso',\n  BDI: 'Burundi',\n  CPV: 'Cabo Verde',\n  KHM: 'Cambodia',\n  CMR: 'Cameroon',\n  CAN: 'Canada',\n  CYM: 'Cayman Islands',\n  CAF: 'Central African Republic',\n  TCD: 'Chad',\n  CHL: 'Chile',\n  CHN: 'China',\n  CXR: 'Christmas Island',\n  CCK: 'Cocos (Keeling) Islands',\n  COL: 'Colombia',\n  COM: 'Comoros',\n  COG: 'Congo',\n  COD: 'Congo, Democratic Republic of the',\n  COK: 'Cook Islands',\n  CRI: 'Costa Rica',\n  CIV: \"Cote d'Ivoire\",\n  HRV: 'Croatia',\n  CUB: 'Cuba',\n  CUW: 'Curacao',\n  CYP: 'Cyprus',\n  CZE: 'Czechia',\n  DNK: 'Denmark',\n  DJI: 'Djibouti',\n  DMA: 'Dominica',\n  DOM: 'Dominican Republic',\n  ECU: 'Ecuador',\n  EGY: 'Egypt',\n  SLV: 'El Salvador',\n  GNQ: 'Equatorial Guinea',\n  ERI: 'Eritrea',\n  EST: 'Estonia',\n  SWZ: 'Eswatini',\n  ETH: 'Ethiopia',\n  FLK: 'Falkland Islands (Malvinas)',\n  FRO: 'Faroe Islands',\n  FJI: 'Fiji',\n  FIN: 'Finland',\n  FRA: 'France',\n  GUF: 'French Guiana',\n  PYF: 'French Polynesia',\n  ATF: 'French Southern Territories',\n  GAB: 'Gabon',\n  GMB: 'Gambia',\n  GEO: 'Georgia',\n  DEU: 'Germany',\n  'D<<': 'Germany', // Bundesrepublik Deutschland uses this in passports instead of DEU\n  GHA: 'Ghana',\n  GIB: 'Gibraltar',\n  GRC: 'Greece',\n  GRL: 'Greenland',\n  GRD: 'Grenada',\n  GLP: 'Guadeloupe',\n  GUM: 'Guam',\n  GTM: 'Guatemala',\n  GGY: 'Guernsey',\n  GIN: 'Guinea',\n  GNB: 'Guinea-Bissau',\n  GUY: 'Guyana',\n  HTI: 'Haiti',\n  HMD: 'Heard Island and McDonald Islands',\n  VAT: 'Holy See',\n  HND: 'Honduras',\n  HKG: 'Hong Kong',\n  HUN: 'Hungary',\n  ISL: 'Iceland',\n  IND: 'India',\n  IDN: 'Indonesia',\n  IRN: 'Iran (Islamic Republic of)',\n  IRQ: 'Iraq',\n  IRL: 'Ireland',\n  IMN: 'Isle of Man',\n  ISR: 'Israel',\n  ITA: 'Italy',\n  JAM: 'Jamaica',\n  JPN: 'Japan',\n  JEY: 'Jersey',\n  JOR: 'Jordan',\n  KAZ: 'Kazakhstan',\n  KEN: 'Kenya',\n  KIR: 'Kiribati',\n  PRK: \"Korea (Democratic People's Republic of)\",\n  KOR: 'Korea, Republic of',\n  KWT: 'Kuwait',\n  KGZ: 'Kyrgyzstan',\n  LAO: \"Lao People's Democratic Republic\",\n  LVA: 'Latvia',\n  LBN: 'Lebanon',\n  LSO: 'Lesotho',\n  LBR: 'Liberia',\n  LBY: 'Libya',\n  LIE: 'Liechtenstein',\n  LTU: 'Lithuania',\n  LUX: 'Luxembourg',\n  MAC: 'Macao',\n  MDG: 'Madagascar',\n  MWI: 'Malawi',\n  MYS: 'Malaysia',\n  MDV: 'Maldives',\n  MLI: 'Mali',\n  MLT: 'Malta',\n  MHL: 'Marshall Islands',\n  MTQ: 'Martinique',\n  MRT: 'Mauritania',\n  MUS: 'Mauritius',\n  MYT: 'Mayotte',\n  MEX: 'Mexico',\n  FSM: 'Micronesia (Federated States of)',\n  MDA: 'Moldova, Republic of',\n  MCO: 'Monaco',\n  MNG: 'Mongolia',\n  MNE: 'Montenegro',\n  MSR: 'Montserrat',\n  MAR: 'Morocco',\n  MOZ: 'Mozambique',\n  MMR: 'Myanmar',\n  NAM: 'Namibia',\n  NRU: 'Nauru',\n  NPL: 'Nepal',\n  NLD: 'Netherlands',\n  NCL: 'New Caledonia',\n  NZL: 'New Zealand',\n  NIC: 'Nicaragua',\n  NER: 'Niger',\n  NGA: 'Nigeria',\n  NIU: 'Niue',\n  NFK: 'Norfolk Island',\n  MKD: 'North Macedonia',\n  MNP: 'Northern Mariana Islands',\n  NOR: 'Norway',\n  OMN: 'Oman',\n  PAK: 'Pakistan',\n  PLW: 'Palau',\n  PSE: 'Palestine, State of',\n  PAN: 'Panama',\n  PNG: 'Papua New Guinea',\n  PRY: 'Paraguay',\n  PER: 'Peru',\n  PHL: 'Philippines',\n  PCN: 'Pitcairn',\n  POL: 'Poland',\n  PRT: 'Portugal',\n  PRI: 'Puerto Rico',\n  QAT: 'Qatar',\n  REU: 'Reunion',\n  ROU: 'Romania',\n  RUS: 'Russian Federation',\n  RWA: 'Rwanda',\n  BLM: 'Saint Barthelemy',\n  SHN: 'Saint Helena, Ascension and Tristan da Cunha',\n  KNA: 'Saint Kitts and Nevis',\n  LCA: 'Saint Lucia',\n  MAF: 'Saint Martin (French part)',\n  SPM: 'Saint Pierre and Miquelon',\n  VCT: 'Saint Vincent and the Grenadines',\n  WSM: 'Samoa',\n  SMR: 'San Marino',\n  STP: 'Sao Tome and Principe',\n  SAU: 'Saudi Arabia',\n  SEN: 'Senegal',\n  SRB: 'Serbia',\n  SYC: 'Seychelles',\n  SLE: 'Sierra Leone',\n  SGP: 'Singapore',\n  SXM: 'Sint Maarten (Dutch part)',\n  SVK: 'Slovakia',\n  SVN: 'Slovenia',\n  SLB: 'Solomon Islands',\n  SOM: 'Somalia',\n  ZAF: 'South Africa',\n  SGS: 'South Georgia and the South Sandwich Islands',\n  SSD: 'South Sudan',\n  ESP: 'Spain',\n  LKA: 'Sri Lanka',\n  SDN: 'Sudan',\n  SUR: 'Suriname',\n  SJM: 'Svalbard and Jan Mayen',\n  SWE: 'Sweden',\n  CHE: 'Switzerland',\n  SYR: 'Syrian Arab Republic',\n  TWN: 'Taiwan, Province of China',\n  TJK: 'Tajikistan',\n  TZA: 'Tanzania, United Republic of',\n  THA: 'Thailand',\n  TLS: 'Timor-Leste',\n  TGO: 'Togo',\n  TKL: 'Tokelau',\n  TON: 'Tonga',\n  TTO: 'Trinidad and Tobago',\n  TUN: 'Tunisia',\n  TUR: 'Turkey',\n  TKM: 'Turkmenistan',\n  TCA: 'Turks and Caicos Islands',\n  TUV: 'Tuvalu',\n  UGA: 'Uganda',\n  UKR: 'Ukraine',\n  ARE: 'United Arab Emirates',\n  GBR: 'United Kingdom of Great Britain and Northern Ireland',\n  USA: 'United States of America',\n  UMI: 'United States Minor Outlying Islands',\n  URY: 'Uruguay',\n  UZB: 'Uzbekistan',\n  VUT: 'Vanuatu',\n  VEN: 'Venezuela (Bolivarian Republic of)',\n  VNM: 'Viet Nam',\n  VGB: 'Virgin Islands (British)',\n  VIR: 'Virgin Islands (U.S.)',\n  WLF: 'Wallis and Futuna',\n  ESH: 'Western Sahara',\n  YEM: 'Yemen',\n  ZMB: 'Zambia',\n  ZWE: 'Zimbabwe',\n};\n\nexport function getCountryCode(countryName: string): string {\n  const entries = Object.entries(countryCodes);\n  const found = entries.find(([_, name]) => name.toLowerCase() === countryName.toLowerCase());\n  return found ? found[0] : 'undefined';\n}\n\nexport const hashAlgos = ['sha512', 'sha384', 'sha256', 'sha224', 'sha1'];\n\nexport const k_csca = 35;\n\nexport const k_dsc = 35;\n\n//48;\nexport const k_dsc_3072 = 35;\n\nexport const k_dsc_4096 = 35;\n\nexport const k_dsc_ecdsa = 4;\n\nexport const max_csca_bytes = 1792;\n\nexport const max_dsc_bytes = 1792;\n\nexport const n_csca = 120;\n\nexport const n_dsc = 120;\n\nexport const n_dsc_3072 = 120;\n\nexport const n_dsc_4096 = 120;\n\nexport const n_dsc_ecdsa = 64;\n\n// max formatted and concatenated datagroup hashes length in bytes\nexport const revealedDataTypes = {\n  issuing_state: 0,\n  name: 1,\n  passport_number: 2,\n  nationality: 3,\n  date_of_birth: 4,\n  gender: 5,\n  expiry_date: 6,\n  older_than: 7,\n  passport_no_ofac: 8,\n  name_and_dob_ofac: 9,\n  name_and_yob_ofac: 10,\n};\n\nexport const saltLengths = [64, 48, 32];\n","export type Country3LetterCode = (typeof countries)[keyof typeof countries];\n\nexport const commonNames = {\n  AFG: 'Afghanistan',\n  ALA: 'Aland Islands',\n  ALB: 'Albania',\n  DZA: 'Algeria',\n  ASM: 'American Samoa',\n  AND: 'Andorra',\n  AGO: 'Angola',\n  AIA: 'Anguilla',\n  ATA: 'Antarctica',\n  ATG: 'Antigua and Barbuda',\n  ARG: 'Argentina',\n  ARM: 'Armenia',\n  ABW: 'Aruba',\n  AUS: 'Australia',\n  AUT: 'Austria',\n  AZE: 'Azerbaijan',\n  BHS: 'Bahamas',\n  BHR: 'Bahrain',\n  BGD: 'Bangladesh',\n  BRB: 'Barbados',\n  BLR: 'Belarus',\n  BEL: 'Belgium',\n  BLZ: 'Belize',\n  BEN: 'Benin',\n  BMU: 'Bermuda',\n  BTN: 'Bhutan',\n  BOL: 'Bolivia',\n  BES: 'Bonaire, Sint Eustatius and Saba',\n  BIH: 'Bosnia and Herzegovina',\n  BWA: 'Botswana',\n  BVT: 'Bouvet Island',\n  BRA: 'Brazil',\n  IOT: 'British Indian Ocean Territory',\n  BRN: 'Brunei Darussalam',\n  BGR: 'Bulgaria',\n  BFA: 'Burkina Faso',\n  BDI: 'Burundi',\n  CPV: 'Cape Verde',\n  KHM: 'Cambodia',\n  CMR: 'Cameroon',\n  CAN: 'Canada',\n  CYM: 'Cayman Islands',\n  CAF: 'Central African Republic',\n  TCD: 'Chad',\n  CHL: 'Chile',\n  CHN: 'China',\n  CXR: 'Christmas Island',\n  CCK: 'Cocos Islands',\n  COL: 'Colombia',\n  COM: 'Comoros',\n  COG: 'Congo',\n  COD: 'Congo, Democratic Republic of the',\n  COK: 'Cook Islands',\n  CRI: 'Costa Rica',\n  CIV: 'Ivory Coast',\n  HRV: 'Croatia',\n  CUB: 'Cuba',\n  CUW: 'Curacao',\n  CYP: 'Cyprus',\n  CZE: 'Czechia',\n  DNK: 'Denmark',\n  DJI: 'Djibouti',\n  DMA: 'Dominica',\n  DOM: 'Dominican Republic',\n  ECU: 'Ecuador',\n  EGY: 'Egypt',\n  SLV: 'El Salvador',\n  GNQ: 'Equatorial Guinea',\n  ERI: 'Eritrea',\n  EST: 'Estonia',\n  SWZ: 'Eswatini',\n  ETH: 'Ethiopia',\n  FLK: 'Falkland Islands',\n  FRO: 'Faroe Islands',\n  FJI: 'Fiji',\n  FIN: 'Finland',\n  FRA: 'France',\n  GUF: 'French Guiana',\n  PYF: 'French Polynesia',\n  ATF: 'French Southern Territories',\n  GAB: 'Gabon',\n  GMB: 'Gambia',\n  GEO: 'Georgia',\n  DEU: 'Germany',\n  'D<<': 'Germany', // Bundesrepublik Deutschland uses this in passports instead of DEU\n  GHA: 'Ghana',\n  GIB: 'Gibraltar',\n  GRC: 'Greece',\n  GRL: 'Greenland',\n  GRD: 'Grenada',\n  GLP: 'Guadeloupe',\n  GUM: 'Guam',\n  GTM: 'Guatemala',\n  GGY: 'Guernsey',\n  GIN: 'Guinea',\n  GNB: 'Guinea-Bissau',\n  GUY: 'Guyana',\n  HTI: 'Haiti',\n  HMD: 'Heard Island and McDonald Islands',\n  VAT: 'Vatican City',\n  HND: 'Honduras',\n  HKG: 'Hong Kong',\n  HUN: 'Hungary',\n  ISL: 'Iceland',\n  IND: 'India',\n  IDN: 'Indonesia',\n  IRN: 'Iran',\n  IRQ: 'Iraq',\n  IRL: 'Ireland',\n  IMN: 'Isle of Man',\n  ISR: 'Israel',\n  ITA: 'Italy',\n  JAM: 'Jamaica',\n  JPN: 'Japan',\n  JEY: 'Jersey',\n  JOR: 'Jordan',\n  KAZ: 'Kazakhstan',\n  KEN: 'Kenya',\n  KIR: 'Kiribati',\n  PRK: 'North Korea',\n  KOR: 'South Korea',\n  KWT: 'Kuwait',\n  KGZ: 'Kyrgyzstan',\n  LAO: 'Laos',\n  LVA: 'Latvia',\n  LBN: 'Lebanon',\n  LSO: 'Lesotho',\n  LBR: 'Liberia',\n  LBY: 'Libya',\n  LIE: 'Liechtenstein',\n  LTU: 'Lithuania',\n  LUX: 'Luxembourg',\n  MAC: 'Macao',\n  MDG: 'Madagascar',\n  MWI: 'Malawi',\n  MYS: 'Malaysia',\n  MDV: 'Maldives',\n  MLI: 'Mali',\n  MLT: 'Malta',\n  MHL: 'Marshall Islands',\n  MTQ: 'Martinique',\n  MRT: 'Mauritania',\n  MUS: 'Mauritius',\n  MYT: 'Mayotte',\n  MEX: 'Mexico',\n  FSM: 'Micronesia',\n  MDA: 'Moldova',\n  MCO: 'Monaco',\n  MNG: 'Mongolia',\n  MNE: 'Montenegro',\n  MSR: 'Montserrat',\n  MAR: 'Morocco',\n  MOZ: 'Mozambique',\n  MMR: 'Myanmar',\n  NAM: 'Namibia',\n  NRU: 'Nauru',\n  NPL: 'Nepal',\n  NLD: 'Netherlands',\n  NCL: 'New Caledonia',\n  NZL: 'New Zealand',\n  NIC: 'Nicaragua',\n  NER: 'Niger',\n  NGA: 'Nigeria',\n  NIU: 'Niue',\n  NFK: 'Norfolk Island',\n  MKD: 'North Macedonia',\n  MNP: 'Northern Mariana Islands',\n  NOR: 'Norway',\n  OMN: 'Oman',\n  PAK: 'Pakistan',\n  PLW: 'Palau',\n  PSE: 'Palestine, State of',\n  PAN: 'Panama',\n  PNG: 'Papua New Guinea',\n  PRY: 'Paraguay',\n  PER: 'Peru',\n  PHL: 'Philippines',\n  PCN: 'Pitcairn',\n  POL: 'Poland',\n  PRT: 'Portugal',\n  PRI: 'Puerto Rico',\n  QAT: 'Qatar',\n  REU: 'Reunion',\n  ROU: 'Romania',\n  RUS: 'Russian Federation',\n  RWA: 'Rwanda',\n  BLM: 'Saint Barthelemy',\n  SHN: 'Saint Helena, Ascension and Tristan da Cunha',\n  KNA: 'Saint Kitts and Nevis',\n  LCA: 'Saint Lucia',\n  MAF: 'Saint Martin (French part)',\n  SPM: 'Saint Pierre and Miquelon',\n  VCT: 'Saint Vincent and the Grenadines',\n  WSM: 'Samoa',\n  SMR: 'San Marino',\n  STP: 'Sao Tome and Principe',\n  SAU: 'Saudi Arabia',\n  SEN: 'Senegal',\n  SRB: 'Serbia',\n  SYC: 'Seychelles',\n  SLE: 'Sierra Leone',\n  SGP: 'Singapore',\n  SXM: 'Sint Maarten (Dutch part)',\n  SVK: 'Slovakia',\n  SVN: 'Slovenia',\n  SLB: 'Solomon Islands',\n  SOM: 'Somalia',\n  ZAF: 'South Africa',\n  SGS: 'South Georgia and the South Sandwich Islands',\n  SSD: 'South Sudan',\n  ESP: 'Spain',\n  LKA: 'Sri Lanka',\n  SDN: 'Sudan',\n  SUR: 'Suriname',\n  SJM: 'Svalbard and Jan Mayen',\n  SWE: 'Sweden',\n  CHE: 'Switzerland',\n  SYR: 'Syrian Arab Republic',\n  TWN: 'Taiwan, Province of China',\n  TJK: 'Tajikistan',\n  TZA: 'Tanzania, United Republic of',\n  THA: 'Thailand',\n  TLS: 'Timor-Leste',\n  TGO: 'Togo',\n  TKL: 'Tokelau',\n  TON: 'Tonga',\n  TTO: 'Trinidad and Tobago',\n  TUN: 'Tunisia',\n  TUR: 'Turkey',\n  TKM: 'Turkmenistan',\n  TCA: 'Turks and Caicos Islands',\n  TUV: 'Tuvalu',\n  UGA: 'Uganda',\n  UKR: 'Ukraine',\n  ARE: 'United Arab Emirates',\n  GBR: 'United Kingdom of Great Britain and Northern Ireland',\n  USA: 'United States of America',\n  UMI: 'United States Minor Outlying Islands',\n  URY: 'Uruguay',\n  UZB: 'Uzbekistan',\n  VUT: 'Vanuatu',\n  VEN: 'Venezuela (Bolivarian Republic of)',\n  VNM: 'Viet Nam',\n  VGB: 'Virgin Islands (British)',\n  VIR: 'Virgin Islands (U.S.)',\n  WLF: 'Wallis and Futuna',\n  ESH: 'Western Sahara',\n  YEM: 'Yemen',\n  ZMB: 'Zambia',\n  ZWE: 'Zimbabwe',\n  EUE: 'European Union',\n  UNO: 'United Nations',\n  XCE: 'Council of Europe',\n  XPO: 'International Criminal Police Organization',\n  XOM: 'Sovereign Military Order of Malta',\n};\n\nexport const countries = {\n  AFGHANISTAN: 'AFG',\n  ALAND_ISLANDS: 'ALA',\n  ALBANIA: 'ALB',\n  ALGERIA: 'DZA',\n  AMERICAN_SAMOA: 'ASM',\n  ANDORRA: 'AND',\n  ANGOLA: 'AGO',\n  ANGUILLA: 'AIA',\n  ANTARCTICA: 'ATA',\n  ANTIGUA_AND_BARBUDA: 'ATG',\n  ARGENTINA: 'ARG',\n  ARMENIA: 'ARM',\n  ARUBA: 'ABW',\n  AUSTRALIA: 'AUS',\n  AUSTRIA: 'AUT',\n  AZERBAIJAN: 'AZE',\n  BAHAMAS: 'BHS',\n  BAHRAIN: 'BHR',\n  BANGLADESH: 'BGD',\n  BARBADOS: 'BRB',\n  BELARUS: 'BLR',\n  BELGIUM: 'BEL',\n  BELIZE: 'BLZ',\n  BENIN: 'BEN',\n  BERMUDA: 'BMU',\n  BHUTAN: 'BTN',\n  BOLIVIA: 'BOL',\n  BONAIRE_SINT_EUSTATIUS_AND_SABA: 'BES',\n  BOSNIA_AND_HERZEGOVINA: 'BIH',\n  BOTSWANA: 'BWA',\n  BOUVET_ISLAND: 'BVT',\n  BRAZIL: 'BRA',\n  BRITISH_INDIAN_OCEAN_TERRITORY: 'IOT',\n  BRUNEI: 'BRN',\n  BULGARIA: 'BGR',\n  BURKINA_FASO: 'BFA',\n  BURUNDI: 'BDI',\n  CAPE_VERDE: 'CPV',\n  CAMBODIA: 'KHM',\n  CAMEROON: 'CMR',\n  CANADA: 'CAN',\n  CAYMAN_ISLANDS: 'CYM',\n  CENTRAL_AFRICAN_REPUBLIC: 'CAF',\n  CHAD: 'TCD',\n  CHILE: 'CHL',\n  CHINA: 'CHN',\n  CHRISTMAS_ISLAND: 'CXR',\n  COCOS_ISLANDS: 'CCK',\n  COLOMBIA: 'COL',\n  COMOROS: 'COM',\n  CONGO: 'COG',\n  DR_CONGO: 'COD',\n  COOK_ISLANDS: 'COK',\n  COSTA_RICA: 'CRI',\n  IVORY_COAST: 'CIV',\n  CROATIA: 'HRV',\n  CUBA: 'CUB',\n  CURACAO: 'CUW',\n  CYPRUS: 'CYP',\n  CZECH_REPUBLIC: 'CZE',\n  DENMARK: 'DNK',\n  DJIBOUTI: 'DJI',\n  DOMINICA: 'DMA',\n  DOMINICAN_REPUBLIC: 'DOM',\n  ECUADOR: 'ECU',\n  EGYPT: 'EGY',\n  EL_SALVADOR: 'SLV',\n  EQUATORIAL_GUINEA: 'GNQ',\n  ERITREA: 'ERI',\n  ESTONIA: 'EST',\n  ESWATINI: 'SWZ',\n  ETHIOPIA: 'ETH',\n  FALKLAND_ISLANDS: 'FLK',\n  FAROE_ISLANDS: 'FRO',\n  FIJI: 'FJI',\n  FINLAND: 'FIN',\n  FRANCE: 'FRA',\n  FRENCH_GUIANA: 'GUF',\n  FRENCH_POLYNESIA: 'PYF',\n  FRENCH_SOUTHERN_TERRITORIES: 'ATF',\n  GABON: 'GAB',\n  GAMBIA: 'GMB',\n  GEORGIA: 'GEO',\n  GERMANY: 'D<<',\n  GHANA: 'GHA',\n  GIBRALTAR: 'GIB',\n  GREECE: 'GRC',\n  GREENLAND: 'GRL',\n  GRENADA: 'GRD',\n  GUADELOUPE: 'GLP',\n  GUAM: 'GUM',\n  GUATEMALA: 'GTM',\n  GUERNSEY: 'GGY',\n  GUINEA: 'GIN',\n  GUINEA_BISSAU: 'GNB',\n  GUYANA: 'GUY',\n  HAITI: 'HTI',\n  HEARD_ISLAND_AND_MCDONALD_ISLANDS: 'HMD',\n  VATICAN_CITY: 'VAT',\n  HONDURAS: 'HND',\n  HONG_KONG: 'HKG',\n  HUNGARY: 'HUN',\n  ICELAND: 'ISL',\n  INDIA: 'IND',\n  INDONESIA: 'IDN',\n  IRAN: 'IRN',\n  IRAQ: 'IRQ',\n  IRELAND: 'IRL',\n  ISLE_OF_MAN: 'IMN',\n  ISRAEL: 'ISR',\n  ITALY: 'ITA',\n  JAMAICA: 'JAM',\n  JAPAN: 'JPN',\n  JERSEY: 'JEY',\n  JORDAN: 'JOR',\n  KAZAKHSTAN: 'KAZ',\n  KENYA: 'KEN',\n  KIRIBATI: 'KIR',\n  NORTH_KOREA: 'PRK',\n  SOUTH_KOREA: 'KOR',\n  KUWAIT: 'KWT',\n  KYRGYZSTAN: 'KGZ',\n  LAOS: 'LAO',\n  LATVIA: 'LVA',\n  LEBANON: 'LBN',\n  LESOTHO: 'LSO',\n  LIBERIA: 'LBR',\n  LIBYA: 'LBY',\n  LIECHTENSTEIN: 'LIE',\n  LITHUANIA: 'LTU',\n  LUXEMBOURG: 'LUX',\n  MACAO: 'MAC',\n  MADAGASCAR: 'MDG',\n  MALAWI: 'MWI',\n  MALAYSIA: 'MYS',\n  MALDIVES: 'MDV',\n  MALI: 'MLI',\n  MALTA: 'MLT',\n  MARSHALL_ISLANDS: 'MHL',\n  MARTINIQUE: 'MTQ',\n  MAURITANIA: 'MRT',\n  MAURITIUS: 'MUS',\n  MAYOTTE: 'MYT',\n  MEXICO: 'MEX',\n  MICRONESIA: 'FSM',\n  MOLDOVA: 'MDA',\n  MONACO: 'MCO',\n  MONGOLIA: 'MNG',\n  MONTENEGRO: 'MNE',\n  MONTSERRAT: 'MSR',\n  MOROCCO: 'MAR',\n  MOZAMBIQUE: 'MOZ',\n  MYANMAR: 'MMR',\n  NAMIBIA: 'NAM',\n  NAURU: 'NRU',\n  NEPAL: 'NPL',\n  NETHERLANDS: 'NLD',\n  NEW_CALEDONIA: 'NCL',\n  NEW_ZEALAND: 'NZL',\n  NICARAGUA: 'NIC',\n  NIGER: 'NER',\n  NIGERIA: 'NGA',\n  NIUE: 'NIU',\n  NORFOLK_ISLAND: 'NFK',\n  NORTH_MACEDONIA: 'MKD',\n  NORTHERN_MARIANA_ISLANDS: 'MNP',\n  NORWAY: 'NOR',\n  OMAN: 'OMN',\n  PAKISTAN: 'PAK',\n  PALAU: 'PLW',\n  PALESTINE: 'PSE',\n  PANAMA: 'PAN',\n  PAPUA_NEW_GUINEA: 'PNG',\n  PARAGUAY: 'PRY',\n  PERU: 'PER',\n  PHILIPPINES: 'PHL',\n  PITCAIRN: 'PCN',\n  POLAND: 'POL',\n  PORTUGAL: 'PRT',\n  PUERTO_RICO: 'PRI',\n  QATAR: 'QAT',\n  REUNION: 'REU',\n  ROMANIA: 'ROU',\n  RUSSIA: 'RUS',\n  RWANDA: 'RWA',\n  SAINT_BARTHELEMY: 'BLM',\n  SAINT_HELENA_ASCENSION_AND_TRISTAN_DA_CUNHA: 'SHN',\n  SAINT_KITTS_AND_NEVIS: 'KNA',\n  SAINT_LUCIA: 'LCA',\n  SAINT_MARTIN: 'MAF',\n  SAINT_PIERRE_AND_MIQUELON: 'SPM',\n  SAINT_VINCENT_AND_THE_GRENADINES: 'VCT',\n  SAMOA: 'WSM',\n  SAN_MARINO: 'SMR',\n  SAO_TOME_AND_PRINCIPE: 'STP',\n  SAUDI_ARABIA: 'SAU',\n  SENEGAL: 'SEN',\n  SERBIA: 'SRB',\n  SEYCHELLES: 'SYC',\n  SIERRA_LEONE: 'SLE',\n  SINGAPORE: 'SGP',\n  SINT_MAARTEN: 'SXM',\n  SLOVAKIA: 'SVK',\n  SLOVENIA: 'SVN',\n  SOLOMON_ISLANDS: 'SLB',\n  SOMALIA: 'SOM',\n  SOUTH_AFRICA: 'ZAF',\n  SOUTH_GEORGIA_AND_THE_SOUTH_SANDWICH_ISLANDS: 'SGS',\n  SOUTH_SUDAN: 'SSD',\n  SPAIN: 'ESP',\n  SRI_LANKA: 'LKA',\n  SUDAN: 'SDN',\n  SURINAME: 'SUR',\n  SVALBARD_AND_JAN_MAYEN: 'SJM',\n  SWEDEN: 'SWE',\n  SWITZERLAND: 'CHE',\n  SYRIAN_ARAB_REPUBLIC: 'SYR',\n  TAIWAN: 'TWN',\n  TAJIKISTAN: 'TJK',\n  TANZANIA: 'TZA',\n  THAILAND: 'THA',\n  TIMOR_LESTE: 'TLS',\n  TOGO: 'TGO',\n  TOKELAU: 'TKL',\n  TONGA: 'TON',\n  TRINIDAD_AND_TOBAGO: 'TTO',\n  TUNISIA: 'TUN',\n  TURKEY: 'TUR',\n  TURKMENISTAN: 'TKM',\n  TURKS_AND_CAICOS_ISLANDS: 'TCA',\n  TUVALU: 'TUV',\n  UGANDA: 'UGA',\n  UKRAINE: 'UKR',\n  UNITED_ARAB_EMIRATES: 'ARE',\n  UNITED_KINGDOM: 'GBR',\n  UNITED_STATES: 'USA',\n  UNITED_STATES_MINOR_OUTLYING_ISLANDS: 'UMI',\n  URUGUAY: 'URY',\n  UZBEKISTAN: 'UZB',\n  VANUATU: 'VUT',\n  VENEZUELA: 'VEN',\n  VIET_NAM: 'VNM',\n  VIRGIN_ISLANDS_BRITISH: 'VGB',\n  VIRGIN_ISLANDS_US: 'VIR',\n  WALLIS_AND_FUTUNA: 'WLF',\n  WESTERN_SAHARA: 'ESH',\n  YEMEN: 'YEM',\n  ZAMBIA: 'ZMB',\n  ZIMBABWE: 'ZWE',\n  EUROPEAN_UNION: 'EUE',\n  UNITED_NATIONS: 'UNO',\n  COUNCIL_OF_EUROPE: 'XCE',\n  INTERPOL: 'XPO',\n  SMOM: 'XOM',\n} as const;\n"],"mappings":"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","names":["DscVerifierId","RegisterVerifierId","SignatureAlgorithmIndex"]}