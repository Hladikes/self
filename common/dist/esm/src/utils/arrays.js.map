{"version":3,"sources":["../../../../src/utils/arrays.ts"],"sourcesContent":["export function arraysAreEqual(array1: number[], array2: number[]) {\n  return array1.length === array2.length && array1.every((value, index) => value === array2[index]);\n}\n\nexport function findSubarrayIndex(arr: number[], subArr: number[]): number {\n  if (!arr || !Array.isArray(arr) || !subArr || !Array.isArray(subArr)) {\n    console.warn('Invalid input to findSubarrayIndex:', { arr, subArr });\n    return -1;\n  }\n\n  if (subArr.length === 0) {\n    return -1;\n  }\n\n  if (subArr.length > arr.length) {\n    return -1;\n  }\n\n  return arr.findIndex((_, i) => subArr.every((val, j) => arr[i + j] === val));\n}\n"],"mappings":";AAAO,SAAS,eAAe,QAAkB,QAAkB;AACjE,SAAO,OAAO,WAAW,OAAO,UAAU,OAAO,MAAM,CAAC,OAAO,UAAU,UAAU,OAAO,KAAK,CAAC;AAClG;AAEO,SAAS,kBAAkB,KAAe,QAA0B;AACzE,MAAI,CAAC,OAAO,CAAC,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,QAAQ,MAAM,GAAG;AACpE,YAAQ,KAAK,uCAAuC,EAAE,KAAK,OAAO,CAAC;AACnE,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,WAAW,GAAG;AACvB,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,SAAS,IAAI,QAAQ;AAC9B,WAAO;AAAA,EACT;AAEA,SAAO,IAAI,UAAU,CAAC,GAAG,MAAM,OAAO,MAAM,CAAC,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;AAC7E;","names":[]}