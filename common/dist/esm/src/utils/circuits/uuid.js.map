{"version":3,"sources":["../../../../../src/utils/circuits/uuid.ts"],"sourcesContent":["export type UserIdType = 'hex' | 'uuid';\n/// UUID\nfunction hexToBigInt(hex: string): bigint {\n  return BigInt(`0x${hex}`);\n}\n\nfunction checkBigInt(bigInt: bigint) {\n  const max253BitValue = BigInt(2n ** 253n - 1n);\n  if (bigInt > max253BitValue) {\n    throw new Error('Input should be < 2^253 - 1');\n  }\n}\n\nfunction uuidToBigInt(uuid: string): bigint {\n  const hexString = uuid.replace(/-/g, '');\n  const bigInt = hexToBigInt(hexString);\n  return bigInt;\n}\n\nexport function bigIntToHex(bigInt: bigint): string {\n  return bigInt.toString(16).padStart(32, '0');\n}\n\nexport function castFromScope(scope: string): string {\n  checkStringLength(scope);\n  return stringToBigInt(scope).toString();\n}\n\nexport function castFromUUID(uuid: string): string {\n  const bigInt = uuidToBigInt(uuid);\n  checkBigInt(bigInt);\n  return bigInt.toString();\n}\n\nexport function castToAddress(bigInt: bigint): string {\n  return `0x${bigInt.toString(16).padStart(40, '0')}`;\n}\n\nexport function castToScope(num: bigint): string {\n  const str = num.toString().slice(1); // Remove leading '1'\n  const charCodes = str.match(/.{1,3}/g) || [];\n  return String.fromCharCode(...charCodes.map((code) => parseInt(code, 10)));\n}\n\nexport function castToUUID(bigInt: bigint): string {\n  const hex = bigIntToHex(bigInt);\n  return hexToUUID(hex);\n}\n\n/// scope\nfunction checkStringLength(str: string) {\n  if (str.length > 25) {\n    throw new Error('Input string must not exceed 25 characters');\n  }\n}\n\nfunction stringToBigInt(str: string): bigint {\n  return BigInt(\n    '1' +\n      Array.from(str)\n        .map((char) => char.charCodeAt(0).toString().padStart(3, '0'))\n        .join('')\n  );\n}\n\nexport function castToUserIdentifier(bigInt: bigint, user_identifier_type: UserIdType): string {\n  switch (user_identifier_type) {\n    case 'hex':\n      return castToAddress(bigInt);\n    case 'uuid':\n      return castToUUID(bigInt);\n  }\n}\n\nexport function hexToUUID(hex: string): string {\n  return `${hex.slice(0, 8)}-${hex.slice(8, 12)}-${hex.slice(12, 16)}-${hex.slice(16, 20)}-${hex.slice(20)}`;\n}\n\nexport function stringToAsciiBigIntArray(str: string): bigint[] {\n  const asciiBigIntArray = [];\n  for (let i = 0; i < str.length; i++) {\n    asciiBigIntArray.push(BigInt(str.charCodeAt(i)));\n  }\n  return asciiBigIntArray;\n}\n\nexport function validateUserId(userId: string, type: UserIdType): boolean {\n  switch (type) {\n    case 'hex':\n      return /^[0-9A-Fa-f]+$/.test(userId);\n    case 'uuid':\n      return /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(\n        userId\n      );\n    default:\n      return false;\n  }\n}\n"],"mappings":";AAEA,SAAS,YAAY,KAAqB;AACxC,SAAO,OAAO,KAAK,GAAG,EAAE;AAC1B;AAEA,SAAS,YAAY,QAAgB;AACnC,QAAM,iBAAiB,OAAO,MAAM,OAAO,EAAE;AAC7C,MAAI,SAAS,gBAAgB;AAC3B,UAAM,IAAI,MAAM,6BAA6B;AAAA,EAC/C;AACF;AAEA,SAAS,aAAa,MAAsB;AAC1C,QAAM,YAAY,KAAK,QAAQ,MAAM,EAAE;AACvC,QAAM,SAAS,YAAY,SAAS;AACpC,SAAO;AACT;AAEO,SAAS,YAAY,QAAwB;AAClD,SAAO,OAAO,SAAS,EAAE,EAAE,SAAS,IAAI,GAAG;AAC7C;AAEO,SAAS,cAAc,OAAuB;AACnD,oBAAkB,KAAK;AACvB,SAAO,eAAe,KAAK,EAAE,SAAS;AACxC;AAEO,SAAS,aAAa,MAAsB;AACjD,QAAM,SAAS,aAAa,IAAI;AAChC,cAAY,MAAM;AAClB,SAAO,OAAO,SAAS;AACzB;AAEO,SAAS,cAAc,QAAwB;AACpD,SAAO,KAAK,OAAO,SAAS,EAAE,EAAE,SAAS,IAAI,GAAG,CAAC;AACnD;AAEO,SAAS,YAAY,KAAqB;AAC/C,QAAM,MAAM,IAAI,SAAS,EAAE,MAAM,CAAC;AAClC,QAAM,YAAY,IAAI,MAAM,SAAS,KAAK,CAAC;AAC3C,SAAO,OAAO,aAAa,GAAG,UAAU,IAAI,CAAC,SAAS,SAAS,MAAM,EAAE,CAAC,CAAC;AAC3E;AAEO,SAAS,WAAW,QAAwB;AACjD,QAAM,MAAM,YAAY,MAAM;AAC9B,SAAO,UAAU,GAAG;AACtB;AAGA,SAAS,kBAAkB,KAAa;AACtC,MAAI,IAAI,SAAS,IAAI;AACnB,UAAM,IAAI,MAAM,4CAA4C;AAAA,EAC9D;AACF;AAEA,SAAS,eAAe,KAAqB;AAC3C,SAAO;AAAA,IACL,MACE,MAAM,KAAK,GAAG,EACX,IAAI,CAAC,SAAS,KAAK,WAAW,CAAC,EAAE,SAAS,EAAE,SAAS,GAAG,GAAG,CAAC,EAC5D,KAAK,EAAE;AAAA,EACd;AACF;AAEO,SAAS,qBAAqB,QAAgB,sBAA0C;AAC7F,UAAQ,sBAAsB;AAAA,IAC5B,KAAK;AACH,aAAO,cAAc,MAAM;AAAA,IAC7B,KAAK;AACH,aAAO,WAAW,MAAM;AAAA,EAC5B;AACF;AAEO,SAAS,UAAU,KAAqB;AAC7C,SAAO,GAAG,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC,IAAI,IAAI,MAAM,IAAI,EAAE,CAAC,IAAI,IAAI,MAAM,IAAI,EAAE,CAAC,IAAI,IAAI,MAAM,EAAE,CAAC;AAC1G;AAEO,SAAS,yBAAyB,KAAuB;AAC9D,QAAM,mBAAmB,CAAC;AAC1B,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,qBAAiB,KAAK,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;AAAA,EACjD;AACA,SAAO;AACT;AAEO,SAAS,eAAe,QAAgB,MAA2B;AACxE,UAAQ,MAAM;AAAA,IACZ,KAAK;AACH,aAAO,iBAAiB,KAAK,MAAM;AAAA,IACrC,KAAK;AACH,aAAO,6EAA6E;AAAA,QAClF;AAAA,MACF;AAAA,IACF;AACE,aAAO;AAAA,EACX;AACF;","names":[]}